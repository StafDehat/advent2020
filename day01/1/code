#!/bin/bash
# Usage: $0 input-file

# Create an array from only the numeric lines in input file
declare -a input
input=( $( grep -P '^\s*-?\s*\d+\s*$' "${1}" ) )

# Count how many items in that array:
numItems="${#input[@]}"

# Iterate over the array (x)
for x in $( seq 0 $((numItems-1)) ); do
  numAtPosX=${input[${x}]}
  #echo "x=${x}, input[x]=${numAtPosX}"

  # For inner loop (y), we can skip anything <x, because it would have
  #   already compared itself to us, while it was x.
  # Also, skip =x, because we don't want to compare a number to itself
  for y in $( seq $((x+1)) $((numItems-1)) ); do
    numAtPosY=${input[${y}]}
    sum=$(( numAtPosX + numAtPosY ))
    if [[ ${sum} -eq 2020 ]]; then
      echo $(( numAtPosX * numAtPosY ))
      break 2
    fi
  done
done

