#!/bin/bash

inFile="${1}"

# Split input file into one file per passport
rm -f parts/out*.txt
cat "${inFile}" | 
  awk '/^\s*$/{n++}
    {print >"parts/out"n".txt"}
    END {print n}'


function sum() {
  local input
  if [[ "${#}" -gt 0 ]]; then
    input=${@}
  else
    input=$( cat )
  fi
  {
    echo -n "0";
    for x in ${input}; do
      echo -n " + ${x}"
    done;
    echo;
  } | bc -l
}


for group in parts/*; do
  members=0

  unset yeses
  declare -A yeses

  #echo "Processing group ${group}" >&2
  while read LINE; do
    #echo "Processing line ${LINE}" >&2
    while read -n 1 char; do
      # Skip if null (newline)
      if grep -q '^\s*$' <<<"${char}"; then
        continue
      fi
      yeses[${char}]=$((${yeses[${char}]}+1))
    done <<<"${LINE}"
    members=$(( members + 1 ))
  done < <( grep -vP '^\s*$' "${group}" )

  count=0
  for x in "${!yeses[@]}"; do
    if [[ "${yeses[${x}]}" -ge ${members} ]]; then
      count=$(( count + 1 ))
    fi
  done
  #echo "Group $group resulted in ${count}" >&2
  echo "${count}"
done | sum

